name: Benchmarks

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'core/benches/**'
      - 'core/src/**'
      - 'core/Cargo.toml'
  pull_request:
    branches: [ main ]
    paths:
      - 'core/benches/**'
      - 'core/src/**'
      - 'core/Cargo.toml'

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark:
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: core/target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Run benchmarks
        working-directory: ./core
        run: |
          # Run benchmarks and save results
          cargo bench --no-run
          cargo bench -- --output-format bencher | tee output.txt
          
      - name: Store benchmark result
        if: github.event_name != 'pull_request'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: core/output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: core/output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          alert-threshold: '150%'
          comment-always: true
