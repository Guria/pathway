name: Benchmarks

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'core/benches/**'
      - 'core/src/**'
      - 'core/Cargo.toml'
  pull_request:
    branches: [ main ]
    paths:
      - 'core/benches/**'
      - 'core/src/**'
      - 'core/Cargo.toml'

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark:
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: core/target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Run benchmarks
        id: run_benchmarks
        working-directory: ./core
        shell: bash
        run: |
          set -euo pipefail
          rm -f output.txt
          if ls benches/*.rs >/dev/null 2>&1 || grep -q '^\[\[bench\]\]' Cargo.toml; then
            cargo bench --no-run
            cargo bench -- --color never | tee output.txt
            if [ -s output.txt ] && grep -qE '(ns/iter|Benchmarking|time:)' output.txt; then
              echo "has_results=true" >> "$GITHUB_OUTPUT"
            else
              echo "has_results=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "No benchmark targets detected; skipping cargo bench." | tee output.txt
            echo "has_results=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Store benchmark result
        if: github.event_name != 'pull_request' && steps.run_benchmarks.outputs.has_results == 'true'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: core/output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          
      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.run_benchmarks.outputs.has_results == 'true'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Rust Benchmark
          tool: 'cargo'
          output-file-path: core/output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          alert-threshold: '150%'
          comment-always: true
